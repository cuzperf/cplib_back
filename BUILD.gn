import("cp.gni")
import("test/testSource.gni")

config("cp_config") {
  if (is_win) {
    cflags_cc = [ "/std:c++${cxx_standard}" ]
  } else {
    cflags_cc = [ "-std=c++${cxx_standard}" ]
    cflags_objcc = [ "-std=c++${cxx_standard}" ]
    if (c_extensions) {
      c_standard_style = "gnu"
    } else {
      c_standard_style = "c"
    }
    cflags_c = [ "-std=${c_standard_style}${c_standard}" ]
    cflags_objc = [ "-std=${c_standard_style}${c_standard}" ]
  }
  cflags = [
    "-Werror",
    "-Wall",
    "-Wextra",
    "-Wshadow",
    "-Wformat",
  ]

  if (is_debug) {
    cflags += [ "-g" ]
  }
  # cflags_cc += [ "-ftrapv" ]

  if (is_win) {
    defines += [
      "NOMINMAX",
      "_CRT_SECURE_NO_WARNINGS",
      "_WINSOCK_DEPRECATED_NO_WARNINGS",
      "UNICODE",
      "_UNICODE",
    ]
    if (enable_cxx_exception) {
      cflags_cc += [ "/EHsc" ]
    }
  } else {
    ldflags = [
      "-lpthread",
      "-lm",
    ]
  }
  include_dirs = [
    ".",
    "src",
  ]
}

config("cp_test_config") {
  include_dirs = [
    "third_party/gtest/googletest/include",
    "test",
  ]
}

cp_test("unit_test") {
  sources = [ "test/main.cpp" ]
  sources += base_test_sources
  sources += ds_test_sources
  sources += graph_test_sources
  sources += math_test_sources
  sources += string_test_sources

  deps = [
    "src:cp",
  ]
}

cp_test("smoke_test") {
  sources = [
    "test/smoke_test/cf.cpp",
    "test/smoke_test/luogu.cpp",
    "test/main.cpp",
  ]
  deps = [
    "src:cp",
  ]
}

cp_test("cp_base_test") {
  sources = [ "test/main.cpp" ]
  sources += base_test_sources
  deps = [
    "src:cp_base"
  ]
}

cp_test("cp_math_test") {
  sources = [ "test/main.cpp" ]
  sources += math_test_sources
  deps = [
    "src:cp_math"
  ]
}

cp_test("cp_ds_test") {
  sources = [ "test/main.cpp" ]
  sources += ds_test_sources
  deps = [
    "src:cp_ds"
  ]
}

cp_test("cp_graph_test") {
  sources = [ "test/main.cpp" ]
  sources += graph_test_sources
  deps = [
    "src:cp_graph"
  ]
}

cp_test("cp_string_test") {
  sources = [ "test/main.cpp" ]
  sources += string_test_sources
  deps = [
    "src:cp_string"
  ]
}
