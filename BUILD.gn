import("cp.gni")
import("test/testSource.gni")

config("cp_config") {
  cflags = [
    "-Werror",
    "-Wall",
    "-Wextra",
    "-Wshadow",
    "-Wformat",
    "-Wpedantic",

    # Wno
    "-Wno-undef",
    "-Wno-header-hygiene",
    "-Wno-unused-template",
    "-Wno-c++98-compat",
    "-Wno-c++98-compat-pedantic",
    "-Wno-global-constructors",
    "-Wno-sign-conversion",
    "-Wno-shorten-64-to-32",
    "-Wno-implicit-int-float-conversion",
    "-Wno-float-conversion",
    "-Wno-double-promotion",
    "-Wno-implicit-float-conversion",
    "-Wno-implicit-int-conversion",
    "-Wno-exit-time-destructors",
    "-Wno-ctad-maybe-unsupported",
    "-Wno-implicit-function-declaration",
    # "-ftrapv",
  ]
  include_dirs = [
    ".",
    "src",
  ]
  if (is_win) {
    defines = [
      "WIN32_LEAN_AND_MEAN",
      "_CRT_SECURE_NO_WARNINGS",
    ]
  }
}

config("cp_test_config") {
  include_dirs = [
    "third_party/gtest/googletest/include",
    "test",
  ]
}

cp_test("cp_base_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += base_test_sources
  deps = [
    "src:cp_base"
  ]
}

cp_test("cp_math_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += math_test_sources
  deps = [
    "src:cp_math"
  ]
}

cp_test("cp_ds_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += ds_test_sources
  deps = [
    "src:cp_ds"
  ]
}

cp_test("cp_graph_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += graph_test_sources
  deps = [
    "src:cp_graph"
  ]
}

cp_test("cp_string_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += string_test_sources
  deps = [
    "src:cp_string"
  ]
}

cp_test("cp_thread_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += thread_test_sources
  deps = [
    "src:cp_thread"
  ]
}

cp_test("unit_test") {
  sources = [ "test/gtest_main.cpp" ]
  sources += base_test_sources
  sources += ds_test_sources
  sources += graph_test_sources
  sources += math_test_sources
  sources += string_test_sources
  sources += thread_test_sources

  deps = [
    "src:cp",
  ]
}

cp_test("smoke_test") {
  sources = [
    "test/smoke_test/cf.cpp",
    "test/smoke_test/luogu.cpp",
    "test/gtest_main.cpp",
  ]
  deps = [
    "src:cp",
  ]
}
