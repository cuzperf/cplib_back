import("cp.gni")

config("cp_config") {
  if (is_win) {
    cflags_cc = [ "/std:c++${cxx_standard}" ]
  } else {
    cflags_cc = [ "-std=c++${cxx_standard}" ]
    cflags_objcc = [ "-std=c++${cxx_standard}" ]
    if (c_extensions) {
      c_standard_style = "gnu"
    } else {
      c_standard_style = "c"
    }
    cflags_c = [ "-std=${c_standard_style}${c_standard}" ]
    cflags_objc = [ "-std=${c_standard_style}${c_standard}" ]
  }

  defines = [ "NOMINMAX" ]
  if (is_win) {
    defines += [
      "_CRT_SECURE_NO_WARNINGS",
      "_WINSOCK_DEPRECATED_NO_WARNINGS",
      "UNICODE",
      "_UNICODE",
    ]
    if (enable_cxx_exception) {
      cflags_cc += [ "/EHsc" ]
    }
  } else {
    ldflags = [
      "-lpthread",
      "-lm",
    ]
  }
  include_dirs = [
    ".",
    "src",
  ]
}

config("cp_test_config") {
  include_dirs = [ "third_party/gtest/googletest/include" ]
}

cp_test("unit_test") {
  sources = [
    "test/unit_test/ds_test.cpp",
    "test/main.cpp",
  ]
  deps = [
    "src:cp_ds",
  ]
}

# math_source
# graph_source
# ds_source
# string_source
