import("//cp.gni")

config("gtest_config") {
  defines = [
    # In order to allow regex matches in gtest to be shared between Windows
    # and other systems, we tell gtest to always use it's internal engine.
    "GTEST_HAS_POSIX_RE=0",
    "GTEST_LANG_CXX11=1",
    # "GTEST_HAS_SEH=0"
  ]
  include_dirs = [
    "googletest",
    "googletest/include",
    "."
  ]
  cflags = []
  if (is_win) {
    cflags += [ "/wd4800" ]  # Unused variable warning.

    cflags += [
      "-Wno-nonportable-system-include-path",
      "-Wno-covered-switch-default",
      "-Wno-missing-noreturn",
      "-Wno-used-but-marked-unused",
      "-Wno-switch-enum",
      "-Wlanguage-extension-token",
      "-Wno-suggest-destructor-override",
      "-Wno-unused-member-function",
    ]
  }
  cflags += [
    "-Wno-suggest-override",
    "-Wno-zero-as-null-pointer-constant",
  ]
}

cp_static_library("gtest") {
  sources = [
    "googletest/include/gtest/internal/custom/gtest-port.h",
    "googletest/include/gtest/internal/custom/gtest-printers.h",
    "googletest/include/gtest/internal/custom/gtest.h",

    "googletest/include/gtest/internal/gtest-death-test-internal.h",
    "googletest/include/gtest/internal/gtest-filepath.h",
    "googletest/include/gtest/internal/gtest-internal.h",
    "googletest/include/gtest/internal/gtest-param-util.h",
    "googletest/include/gtest/internal/gtest-port-arch.h",
    "googletest/include/gtest/internal/gtest-port.h",
    "googletest/include/gtest/internal/gtest-string.h",
    "googletest/include/gtest/internal/gtest-type-util.h",

    "googletest/include/gtest/gtest_pred_impl.h",
    "googletest/include/gtest/gtest_prod.h",
    "googletest/include/gtest/gtest-death-test.h",
    "googletest/include/gtest/gtest-matchers.h",
    "googletest/include/gtest/gtest-message.h",
    "googletest/include/gtest/gtest-param-test.h",
    "googletest/include/gtest/gtest-printers.h",
    "googletest/include/gtest/gtest-spi.h",
    "googletest/include/gtest/gtest-test-part.h",
    "googletest/include/gtest/gtest-typed-test.h",
    "googletest/include/gtest/gtest.h",

    "googletest/src/gtest-all.cc",
  ]
  configs = [ ":gtest_config" ]
}

cp_executable("gtest_main") {
  sources = [
    "googletest/src/gtest_main.cc",
  ]
  include_dirs = [
    "googletest",
    "googletest/include",
  ]
  deps = [
    ":gtest",
  ]
  configs = [ ":gtest_config" ]
}
