import("agora.gni")

config("agora_config") {
  if (is_win) {
    cflags_cc = [ "/std:c++${cxx_standard}" ]
  } else {
    cflags_cc = [ "-std=c++${cxx_standard}" ]
    cflags_objcc = [ "-std=c++${cxx_standard}" ]
    if (c_extensions) {
      c_standard_style = "gnu"
    } else {
      c_standard_style = "c"
    }
    cflags_c = [ "-std=${c_standard_style}${c_standard}" ]
    cflags_objc = [ "-std=${c_standard_style}${c_standard}" ]
  }

  defines = [ "NOMINMAX" ]
  if (is_win) {
    defines += [
      "_CRT_SECURE_NO_WARNINGS",
      "_WINSOCK_DEPRECATED_NO_WARNINGS",
      "UNICODE",
      "_UNICODE",
    ]
    if (enable_cxx_exception) {
      cflags_cc += [ "/EHsc" ]
    }
  } else {
    ldflags = [
      "-lpthread",
      "-lm",
    ]
  }
  include_dirs = [ "." ]
}

config("agora_test_config") {
  include_dirs = [ "third_party/gtest/googletest/include" ]
}

agora_executable("cuzperf") {
  sources = [
    "test/cuzperf.cpp",
  ]
  deps = [
    "utils:agora_utility_library",
  ]
}

agora_source_set("test_base") {
  testonly = true
  sources = [
    "test/test_base/log_test_util.cpp",
    "test/test_base/log_test_util.h",
  ]
  configs = [
    ":agora_test_config",
    "utils:agora_utility_config",
  ]
  public_deps = [
    "utils:agora_utility_library",
  ]
}

agora_test("unit_test") {
  sources = [
    "test/unit_test/log_test.cpp",
    "test/unit_test/thread_test.cpp",
    "test/main.cpp",
  ]
  configs = [
    "utils:agora_utility_config",
  ]
  deps = [
    ":test_base",
    "utils:agora_utility_library",
  ]
}

agora_test("smoke_test") {
  sources = [
    "test/smoke_test/api_log_test.cpp",
    "test/main.cpp",
  ]
  configs = [
    "utils:agora_utility_config",
  ]
  deps = [
    "facilities:agora_facility_library",
    ":test_base",
  ]
}
