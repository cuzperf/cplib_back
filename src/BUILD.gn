import("//cp.gni")

cp_static_library("cp_builtin") {
  sources = [
    "base/builtin.c",
    "base/builtin.h",
  ]
}

cp_static_library("cp_math") {
  sources = [
    "math/binom.hpp",
    "math/matrix.hpp",
    "math/mes.hpp",
    "math/mod.hpp",
    "math/ntt.hpp",
    "math/numberTheory.hpp",

    "math/geometry.cpp",
    "math/geometry.h",
    "math/basic.cpp",
    "math/basic.h",
    "math/fft.cpp",
    "math/fft.h",
    "math/fmt.cpp",
    "math/fmt.h",
    "math/mix.cpp",
    "math/mix.h",
  ]
  include_dirs = [
    ".",
    "src",
  ]
  public_deps = [
    ":cp_builtin"
  ]
}

cp_static_library("cp_ds") {
  sources = [
    "ds/basic.hpp",
    "ds/block.hpp",
    "ds/dsu.hpp",
    "ds/fenwick.hpp",
    "ds/segmentTree.hpp",

    "ds/cdqConquer.cpp",
    "ds/cdqConquer.h",
    "ds/mix.cpp",
    "ds/mix.h",
  ]
  public_deps = [
    ":cp_builtin"
  ]
}


cp_static_library("cp") {
  public_deps = [
    ":cp_builtin",
    ":cp_math",
    ":cp_ds",
  ]
}
